# DEVELOPMENT version
version: "3.7"
services:
  mongodb:
    image: mongo:4.2
    networks:
      - network-1
    ports:
      - "27017:27017"
    volumes:
      - "../../${TEMP_FOLDER}/mongodb:/data/db"
  api:
    build:
      context: "../../"
      dockerfile: ./build/docker/node/Dockerfile.dev
      args:
        PACKAGE: "api"
    networks:
      - network-1
    volumes:
      - "../../node_modules:/usr/src/app/node_modules:delegated"
      - "../../packages:/usr/src/app/packages:delegated"
      - "../../libs:/usr/src/app/libs:delegated"
      - "../../dist:/usr/src/app/dist:delegated"
      - "../../package.json:/usr/src/app/package.json:delegated"

  nginx:
    image: nginx:latest
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
      # - group-chat
    ports:
      - "80:80"
    networks:
      - network-1

  group-chat:
    build:
      context: "../../"
      dockerfile: ./build/docker/react/Dockerfile.dev
      args:
        PACKAGE: "group-chat"
    networks:
      - network-1
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      NODE_ENV: "development"
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
    volumes:
      - "../../packages:/usr/src/app/packages:delegated"
      - "../../dist:/usr/src/app/dist:delegated"
      - "../../package.json:/usr/src/app/package.json:delegated"
      - "../../node_modules:/usr/src/app/node_modules:delegated"

  redis:
    image: redis:5.0-alpine
    networks:
      - network-1
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - 6379:6379
    logging:
      driver: none

  peerjs:
    image: peerjs/peerjs-server
    ports:
      - "4444:4444"
    command: [ "--port", "4444", "--path", "/myapp", "--proxied", "false" ]
    networks:
      - network-1

  # turn:
  #   image: instrumentisto/coturn
  #   ports:
  #     - "3478:3478"
  #   networks:
  #     - network-1

networks:
  network-1:
    driver: bridge
    external: true
