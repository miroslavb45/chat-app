# DEVELOPMENT version
version: "3.7"
services:
  api:
    build:
      context: "../../"
      dockerfile: ./build/docker/node/Dockerfile.dev
      args:
        PACKAGE: "api"
    networks:
      - network-1
    ports:
      - "3200:3200"
    volumes:
      - "../../apps:/usr/src/app/apps:delegated"
      - "../../dist:/usr/src/app/dist:delegated"
      - "../../package.json:/usr/src/app/package.json:delegated"

  api_2:
    build:
      context: "../../"
      dockerfile: ./build/docker/node/Dockerfile.dev
      args:
        PACKAGE: "api"
    networks:
      - network-1
    ports:
      - "3201:3200"
    volumes:
      - "../../apps:/usr/src/app/apps:delegated"
      - "../../dist:/usr/src/app/dist:delegated"
      - "../../package.json:/usr/src/app/package.json:delegated"
  group-chat:
    build:
      context: "../../"
      dockerfile: ./build/docker/react/Dockerfile.dev
      args:
        PACKAGE: "group-chat"
    networks:
      - network-1
    ports:
      - "4200:3000"
    depends_on:
      - api
    environment:
      NODE_ENV: "development"
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
    volumes:
      - "../../apps:/usr/src/app/apps:delegated"
      - "../../dist:/usr/src/app/dist:delegated"
      - "../../package.json:/usr/src/app/package.json:delegated"

  redis:
    image: redis:5.0-alpine
    networks:
      - network-1
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - 6379:6379
    logging:
      driver: none


networks:
  network-1:
    external: true
