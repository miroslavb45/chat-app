{
  "root": true,
  "ignorePatterns": [
    "!**/*",
    "*.js"
  ],
  "plugins": [
    "@nrwl/nx"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx"
      ],
      "extends": [
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@nrwl/nx/typescript"
      ],
      "parserOptions": {
        "project": "./tsconfig.*?.json"
      },
      "rules": {
        "eol-last": "error",
        "no-trailing-spaces": "error",
        "no-multiple-empty-lines": "error",
        "no-prototype-builtins": "off",
        "indent": ["error", 2, { "SwitchCase": 1 }],
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/explicit-member-accessibility": "error",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "after-used",
            "vars": "all",
            "varsIgnorePattern": "^_",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ],
        "@nrwl/nx/enforce-module-boundaries": [
          "warn",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": [
                  "*"
                ]
              }
            ]
          }
        ],
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false
          }
        ],
        "object-curly-spacing": [
          "error",
          "always"
        ],
        "keyword-spacing": [
          "error"
        ]
      }
    },
    {
      "files": [
        "*.spec.ts",
        "*.spec.todo.ts",
        "*.mock.ts"
      ],
      "extends": [
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@nrwl/nx/typescript"
      ],
      "parserOptions": {
        "project": "./tsconfig.*?.json"
      },
      "rules": {
        "eol-last": "error",
        "no-trailing-spaces": "error",
        "no-multiple-empty-lines": "error",
        "indent": ["error", 2, { "SwitchCase": 1 }],
        "no-prototype-builtins": "off",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/explicit-member-accessibility": "error",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/no-unused-vars": [
          "off",
          {
            "args": "after-used",
            "vars": "all",
            "varsIgnorePattern": "^_",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ],
        "no-async-promise-executor": "off",
        "@nrwl/nx/enforce-module-boundaries": [
          "warn",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": [
                  "*"
                ]
              }
            ]
          }
        ],
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false
          }
        ],
        "object-curly-spacing": [
          "error",
          "always"
        ]
      }
    }
  ]
}